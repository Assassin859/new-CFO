import React, { useState } from 'react';
import { AlertCircle, TrendingUp, BarChart4, FileText } from 'lucide-react';
import { useFinanceStore } from '../../store/financeStore';

interface Insight {
  id: number;
  title: string;
  description: string;
  type: 'alert' | 'opportunity' | 'analysis' | 'report';
  date: string;
}

const RecentInsights: React.FC = () => {
  const { metrics } = useFinanceStore();
  const [insights, setInsights] = useState<Insight[]>([
    {
      id: 1,
      title: 'Cash Flow Alert',
      description: `Projected cash flow may drop below target threshold in Q3. Current runway: ${metrics.runway.current.toFixed(1)} months.`,
      type: 'alert',
      date: '2h ago',
    },
    {
      id: 2,
      title: 'Growth Opportunity',
      description: `Market analysis indicates potential for ${(metrics.revenue.change + 5).toFixed(1)}% revenue increase by expanding into the Southeast region.`,
      type: 'opportunity',
      date: '1d ago',
    },
    {
      id: 3,
      title: 'Competitor Analysis',
      description: 'Main competitor has reduced prices by 5% on core product lines. Impact analysis ready for review.',
      type: 'analysis',
      date: '2d ago',
    },
    {
      id: 4,
      title: 'Q2 Financial Report',
      description: `Q2 financial report is ready for review with performance ${metrics.revenue.change}% above projections.`,
      type: 'report',
      date: '5d ago',
    },
  ]);

  const getIcon = (type: string) => {
    switch (type) {
      case 'alert':
        return <AlertCircle className="text-red-500\" size={20} />;
      case 'opportunity':
        return <TrendingUp className="text-green-500" size={20} />;
      case 'analysis':
        return <BarChart4 className="text-blue-500" size={20} />;
      case 'report':
        return <FileText className="text-amber-500" size={20} />;
      default:
        return null;
    }
  };

  const handleInsightClick = (insight: Insight) => {
    // Update insights based on type
    switch (insight.type) {
      case 'alert':
        useFinanceStore.getState().runScenario({ type: 'analyze_cashflow', params: {} });
        break;
      case 'opportunity':
        useFinanceStore.getState().runScenario({ type: 'analyze_growth', params: {} });
        break;
      case 'analysis':
        useFinanceStore.getState().runScenario({ type: 'analyze_competitors', params: {} });
        break;
      case 'report':
        useFinanceStore.getState().runScenario({ type: 'generate_report', params: {} });
        break;
    }
  };

  return (
    <div className="bg-white shadow rounded-lg overflow-hidden">
      <div className="px-4 py-5 sm:px-6 border-b border-gray-200">
        <h3 className="text-lg leading-6 font-medium text-gray-900">
          Recent AI Insights
        </h3>
        <p className="mt-1 max-w-2xl text-sm text-gray-500">
          Strategic insights generated by FinanceAI in the last 7 days
        </p>
      </div>
      <ul className="divide-y divide-gray-200">
        {insights.map((insight) => (
          <li key={insight.id}>
            <button 
              onClick={() => handleInsightClick(insight)}
              className="w-full text-left block hover:bg-gray-50 transition-colors"
            >
              <div className="px-4 py-4 sm:px-6">
                <div className="flex items-center">
                  <div className="flex-shrink-0 mr-3">
                    {getIcon(insight.type)}
                  </div>
                  <div className="min-w-0 flex-1">
                    <p className="text-sm font-medium text-indigo-600 truncate">
                      {insight.title}
                    </p>
                    <p className="text-sm text-gray-700 mt-1">
                      {insight.description}
                    </p>
                  </div>
                  <div className="ml-5 flex-shrink-0">
                    <p className="text-xs text-gray-500">{insight.date}</p>
                  </div>
                </div>
              </div>
            </button>
          </li>
        ))}
      </ul>
      <div className="bg-gray-50 px-4 py-3 sm:px-6">
        <div className="flex justify-center">
          <button 
            onClick={() => useFinanceStore.getState().runScenario({ type: 'generate_insights', params: {} })}
            className="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
          >
            View All Insights
          </button>
        </div>
      </div>
    </div>
  );
};

export default RecentInsights;